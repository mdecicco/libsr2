#pragma once
#include <libsr2/vehicle/vehWheel.h>
#include <libsr2/utilities/parFileIO.h>

namespace sr2 {
    class vehCarSim;
    class psInertialCS;

    class vehWheel : public parFileIO {
        public:
            vehWheel();
            ~vehWheel();

            virtual Parser::node* prepare_parser(Parser* p);
            virtual const char* file_type() { return "vehWheel"; }

            void AddNormalLoad(f32 load);
            void SetNormalLoad(f32 load);
            void CalcDispAndDamp(f32 param_1, f32 param_2, f32 param_3, f32* param_4, f32* param_5, i32* param_6);
            void ComputeConstants();
            f32 ComputeFriction(f32 slip_percent, f32* friction);
            void ComputeGM();
            void ComputeSlipPercent(f32* slip_percent, f32 param_3, f32 synchronous_speed);
            void CopyFrom(vehWheel* from);
            f32 GetVisualDispLat();
            f32 GetVisualDispLng();
            f32 GetVisualDispVert();
            void SetBrake(f32 param_1);
            void SetInputs(f32 param_1, f32 param_2, f32 param_3);
            void Update();

            void Reset();

            /*
             *  note:
             *      There is apparently a discrepancy between which of these
             *      fields are in vehWheel and which are in parFileIO
             *
             */

            // knowns
            vehCarSim* vehicle;

            // configurable
            f32 tire_displacement_limit_lat;
            f32 tire_displacement_limit_lng;
            f32 tire_damping_coefficient_lat;
            f32 tire_damping_coefficient_lng;
            f32 tire_drag_coeficient_lat;
            f32 tire_drag_coeficient_lng;
            f32 steering_limit;
            f32 camber_limit;
            f32 wobble_limit;
            f32 axle_limit;
            f32 brake_coefficient;
            f32 handbrake_coefficient;
            f32 steering_offset;
            f32 suspension_limit;
            f32 suspension_extent;
            f32 suspension_factor;
            f32 suspension_damping_coefficient;
            f32 optimum_slip_percent;
            f32 static_friction;

            // simulation controlled
            phInertialCS* phys_obj;
            mat3x4f world_transform;
            vec3f position_0;
            vec3f position_1;
            vec3f position_2;
            vec3f position_3;
            vec3f position_4;
            mat3x4f world_transform_1;
            f32 axle_value;
            i32 is_on_ground;
            f32 inv_optimum_slip_percent_squared;
            f32 suspension_value;
            f32 suspension_velocity;
            f32 friction_handling;
            f32 slip_percent_lat;
            f32 slip_percent_lng;
            f32 sliding_friction;
            char* some_str;

            // unknowns
            undefined field_0x4;
            undefined field_0x5;
            undefined field_0x6;
            undefined field_0x7;
            undefined field_0x8;
            undefined field_0x9;
            undefined field_0xa;
            undefined field_0xb;
            undefined field_0x14;
            undefined field_0x15;
            undefined field_0x16;
            undefined field_0x17;
            undefined field_0x18;
            undefined field_0x19;
            undefined field_0x1a;
            undefined field_0x1b;
            undefined field_0x1c;
            undefined field_0x1d;
            undefined field_0x1e;
            undefined field_0x1f;
            undefined field_0x94;
            undefined field_0x95;
            undefined field_0x96;
            undefined field_0x97;
            pointer field_0xb0;
            undefined field_0xb4;
            undefined field_0xb5;
            undefined field_0xb6;
            undefined field_0xb7;
            vec3f field_0xb8;
            f32 field_0xd0;
            f32 field_0xd4;
            undefined field_0xd8;
            undefined field_0xd9;
            undefined field_0xda;
            undefined field_0xdb;
            undefined field_0xdc;
            undefined field_0xdd;
            undefined field_0xde;
            undefined field_0xdf;
            undefined field_0xe0;
            undefined field_0xe1;
            undefined field_0xe2;
            undefined field_0xe3;
            undefined field_0xe4;
            undefined field_0xe5;
            undefined field_0xe6;
            undefined field_0xe7;
            undefined field_0xe8;
            undefined field_0xe9;
            undefined field_0xea;
            undefined field_0xeb;
            undefined field_0xec;
            undefined field_0xed;
            undefined field_0xee;
            undefined field_0xef;
            undefined field_0xf0;
            undefined field_0xf1;
            undefined field_0xf2;
            undefined field_0xf3;
            undefined field_0xf4;
            undefined field_0xf5;
            undefined field_0xf6;
            undefined field_0xf7;
            undefined field_0xf8;
            undefined field_0xf9;
            undefined field_0xfa;
            undefined field_0xfb;
            undefined field_0xfc;
            undefined field_0xfd;
            undefined field_0xfe;
            undefined field_0xff;
            undefined field_0x100;
            undefined field_0x101;
            undefined field_0x102;
            undefined field_0x103;
            undefined field_0x104;
            undefined field_0x105;
            undefined field_0x106;
            undefined field_0x107;
            undefined field_0x120;
            undefined field_0x121;
            undefined field_0x122;
            undefined field_0x123;
            undefined field_0x124;
            undefined field_0x125;
            undefined field_0x126;
            undefined field_0x127;
            undefined field_0x128;
            undefined field_0x129;
            undefined field_0x12a;
            undefined field_0x12b;
            undefined field_0x12c;
            undefined field_0x12d;
            undefined field_0x12e;
            undefined field_0x12f;
            undefined field_0x130;
            undefined field_0x131;
            undefined field_0x132;
            undefined field_0x133;
            undefined field_0x134;
            undefined field_0x135;
            undefined field_0x136;
            undefined field_0x137;
            undefined field_0x138;
            undefined field_0x139;
            undefined field_0x13a;
            undefined field_0x13b;
            undefined field_0x13c;
            undefined field_0x13d;
            undefined field_0x13e;
            undefined field_0x13f;
            undefined field_0x140;
            undefined field_0x141;
            undefined field_0x142;
            undefined field_0x143;
            undefined field_0x144;
            undefined field_0x145;
            undefined field_0x146;
            undefined field_0x147;
            undefined field_0x148;
            undefined field_0x149;
            undefined field_0x14a;
            undefined field_0x14b;
            undefined field_0x14c;
            undefined field_0x14d;
            undefined field_0x14e;
            undefined field_0x14f;
            undefined field_0x150;
            undefined field_0x151;
            undefined field_0x152;
            undefined field_0x153;
            undefined field_0x154;
            undefined field_0x155;
            undefined field_0x156;
            undefined field_0x157;
            undefined field_0x158;
            undefined field_0x159;
            undefined field_0x15a;
            undefined field_0x15b;
            undefined field_0x15c;
            undefined field_0x15d;
            undefined field_0x15e;
            undefined field_0x15f;
            undefined field_0x160;
            undefined field_0x161;
            undefined field_0x162;
            undefined field_0x163;
            undefined field_0x164;
            undefined field_0x165;
            undefined field_0x166;
            undefined field_0x167;
            undefined4 field_0x168;
            undefined4 field_0x16c;
            f32 field_0x170;
            f32 field_0x174;
            f32 field_0x178;
            f32 field_0x17c;
            f32 field_0x1b0;
            f32 field_0x1b4;
            f32 field_0x1b8;
            f32 field_0x1bc;
            f32 field_0x1c0;
            f32 field_0x1c4;
            f32 field_0x1c8;
            undefined4 field_0x1cc;
            f32 field_0x1d0;
            f32 field_0x1d4;
            f32 field_0x1d8;
            undefined4 field_0x1dc;
            f32 field_0x1e0;
            undefined4 field_0x1e4;
            f32 field_0x1ec;
            f32 field_0x1f0;
            f32 field_0x1f4;
            f32 field_0x1f8;
            f32 field_0x200;
            f32 field_0x208;
            f32 field_0x20c;
            f32 field_0x210;
            f32 field_0x214;
            f32 field_0x218;
            f32 field_0x21c;
            f32 field_0x220;
            undefined4 field_0x228;
            undefined field_0x230;
            undefined field_0x231;
            undefined field_0x232;
            undefined field_0x233;
            f32 field_0x234;
            f32 field_0x238;
            f32 field_0x23c;
            f32 field_0x240;
            f32 field_0x244;
            f32 field_0x248;
            f32 field_0x254;
            f32 field_0x258;
            f32 field_0x268;
            f32 field_0x26c;
            undefined field_0x278;
            undefined field_0x279;
            undefined field_0x27a;
            undefined field_0x27b;
            undefined field_0x27c;
            undefined field_0x27d;
            undefined field_0x27e;
            undefined field_0x27f;
    };
};